# MODEL
##########
type Page {
  id: ObjectID!
  locale: Locale!
  status: Status!
  name: String!
  name_slug: String!
  title: String!
  slug: String!
  seo: Seo!
  modules: [Modules!]!
  created_at: Time!
  updated_at: Time!
}

type Modules {
  id: ObjectID!
  type: String!
  info: Json!
  data: Json!
}

# ENUM
##########
enum PageOrderByInput {
  locale_ASC
  locale_DESC
  status_ASC
  status_DESC
  name_ASC
  name_DESC
  name_slug_ASC
  name_slug_DESC
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
}


# CREATE DTO
##########
input PageCreateInput {
  id: ObjectID
  locale: Locale!
  status: Status!
  name: String!
  name_slug: String!
  title: String!
  slug: String!
  seo: SeoCreateOneInput!
  modules: ModulesCreateManyInput
}

input ModulesCreateManyInput {
  create: [ModulesCreateInput!]!
}

input ModulesCreateInput {
  id: ObjectID!
  type: String!
  info: Json!
  data: Json!
}


# FETCH DTO
##########
input PageWhereUniqueInput {
  id: ObjectID!
}

input PageWhereInput {
  id: ObjectID
  locale: Locale
  status: Status
  name: String
  name_slug: String
  title: String
  slug: String
}


# UPDATE DTO
###########
input PageUpdateInput {
  locale: Locale!
  status: Status
  name: String
  name_slug: String!
  title: String
  slug: String!
  seo: SeoUpdateOneInput
  modules: ModulesUpdateManyInput
}

input ModulesUpdateManyInput {
  create: [ModulesCreateInput!]!
}
