# SCALAR
##########
scalar Time
scalar ObjectID
scalar Json

# DIRECTIVE
##########
directive @auth(role: [Role!]!) on FIELD_DEFINITION

# QUERY
##########
type Query {
  # Menu
  menu(
    where: MenuWhereInput
    searchInNameAndSlug: String
  ): Menu
  menus(
    where: MenuWhereInput
    searchInNameAndSlug: String
    orderBy: MenuOrderByInput
    skip: Int
    limit: Int
  ): [Menu]!

  # Page
  page(
    where: PageWhereInput
    searchInNameAndNameSlugAndTitleAndSlug: String
  ): Page
  pages(
    where: PageWhereInput
    searchInNameAndNameSlugAndTitleAndSlug: String
    orderBy: PageOrderByInput
    skip: Int
    limit: Int
  ): [Page]!

  # Translation
  translation(
    where: TranslationWhereInput
    searchInKeyAndValue: String
  ): Translation
  translations(
    where: TranslationWhereInput
    searchInKeyAndValue: String
    orderBy: TranslationOrderByInput
    skip: Int
    limit: Int
  ): [Translation]!

  # User
  user(
    where: UserWhereInput
    searchInFirstnameAndLastnameAndEmail: String
  ): User @auth(role: ADMIN)
  users(
    where: UserWhereInput
    searchInFirstnameAndLastnameAndEmail: String
    orderBy: UserOrderByInput
    skip: Int
    limit: Int
  ): [User]! @auth(role: [ADMIN])

  # General
  general(
    where: GeneralWhereInput
  ): General
  generals(
    where: GeneralWhereInput
    orderBy: GeneralOrderByInput
    skip: Int
    limit: Int
  ): [General]!
}

# MUTATION
##########
type Mutation {
  # Menu
  createMenu(
    data: MenuCreateInput
  ): Menu! @auth(role: ADMIN)
  updateMenu(
    where: MenuWhereUniqueInput!
    data: MenuUpdateInput!
  ): Menu @auth(role: ADMIN)
  deleteMenu(
    where: MenuWhereUniqueInput!
  ): Menu @auth(role: ADMIN)

  # Page
  createPage(
    data: PageCreateInput!
  ): Page! @auth(role: ADMIN)
  updatePage(
    where: PageWhereUniqueInput!
    data: PageUpdateInput!
  ): Page @auth(role: ADMIN)
  deletePage(
    where: PageWhereUniqueInput!
  ): Page @auth(role: ADMIN)

  # Translation
  createTranslation(
    data: TranslationCreateInput!
  ): Translation! @auth(role: ADMIN)
  updateTranslation(
    where: TranslationWhereUniqueInput!
    data: TranslationUpdateInput!
  ): Translation @auth(role: ADMIN)
  deleteTranslation(
    where: TranslationWhereUniqueInput!
  ): Translation @auth(role: ADMIN)

  # User
  createUser(
    data: UserCreateInput!
  ): User! @auth(role: ADMIN)
  updateUser(
    where: UserWhereUniqueInput!
    data: UserUpdateInput!
  ): User @auth(role: ADMIN)
  deleteUser(
    where: UserWhereUniqueInput!
  ): User @auth(role: ADMIN)

  # General
  createGeneral(
    data: GeneralCreateInput!
  ): General! @auth(role: ADMIN)
  updateGeneral(
    where: GeneralWhereUniqueInput!
    data: GeneralUpdateInput!
  ): General @auth(role: ADMIN)
  deleteGeneral(
    where: GeneralWhereUniqueInput!
  ): General @auth(role: ADMIN)
}
