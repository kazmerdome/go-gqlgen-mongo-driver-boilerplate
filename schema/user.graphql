# MODEL
##########

type User @goModel(model: "go-graphql-mongodb-boilerplate/model.User") {
  id: ObjectID!
  email: String!
  username: String!
  # password: String!
  role: Role!
  created_at: Time!
  updated_at: Time!
}

# ENUM
##########
enum UserOrderByENUM @goModel(model: "go-graphql-mongodb-boilerplate/model.UserOrderByENUM") {
  username_ASC
  username_DESC
  email_ASC
  email_DESC
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
}

# DTO
##########

# Read
input UserWhereUniqueDTO @goModel(model: "go-graphql-mongodb-boilerplate/model.UserWhereUniqueDTO") {
  id: ObjectID!
}

input UserWhereDTO @goModel(model: "go-graphql-mongodb-boilerplate/model.UserWhereDTO") {
  id: ObjectID
  email: String
  username: String
  role: Role
}

# Write
input UserCreateDTO @goModel(model: "go-graphql-mongodb-boilerplate/model.UserCreateDTO") {
  email: String!
  username: String!
  password: String!
}

input UserUpdateDTO @goModel(model: "go-graphql-mongodb-boilerplate/model.UserUpdateDTO") {
  email: String!
  username: String!
  password: String
  # role: Role
}
